services:
  Mooc.ConnectionDataBaseManager:
    factory:
      class: '../../../../Contexts/Shared/infrastructure/persistence/typeorm/TypeOrmClientFactory'
      method: 'createClient'
    arguments: ['Courses']

  Mooc.courses.CourseRepository:
    class: '../../../../Contexts/Courses/infrastructure/TypeOrmCourseRepository'
    arguments: ['@Mooc.ConnectionDataBaseManager']

  Mooc.courses.CourseCreator:
    class: '../../../../Contexts/Courses/application/CourseCreator'
    arguments: ['@Mooc.courses.CourseRepository']  
  
  Mooc.courses.SearchAll:
    class: '../../../../Contexts/Courses/application/SearchAll'
    arguments: ['@Mooc.courses.CourseRepository']  

  Mooc.courses.SearchById:
    class: '../../../../Contexts/Courses/application/SearchById'
    arguments: ['@Mooc.courses.CourseRepository']  

  Apps.todo.controllers.StatusGetController:
    class: '../../controllers/StatusGetController'
    arguments: []

  Apps.todo.controllers.CoursesPostController:
    class: '../../controllers/CoursesPostController'
    arguments: ['@Mooc.courses.CourseCreator'] 

  Apps.todo.controllers.CoursesGetController:
    class: '../../controllers/CoursesGetController'
    arguments: ['@Mooc.courses.SearchAll'] 
  
  Apps.todo.controllers.CoursesGetByIdController:
    class: '../../controllers/CoursesGetByIdController'
    arguments: ['@Mooc.courses.SearchById'] 